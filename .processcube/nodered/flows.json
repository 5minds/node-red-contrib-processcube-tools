[
    {
        "id": "4a5484c44fd92283",
        "type": "tab",
        "label": "Html to Text",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ea83acb4b5051be5",
        "type": "tab",
        "label": "Email receiver",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "efcace170d0f887c",
        "type": "tab",
        "label": "Email sender",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4902f3ca9af6dabb",
        "type": "tab",
        "label": "File storage",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "26b226e0c33daadc",
        "type": "group",
        "z": "4902f3ca9af6dabb",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8f531e985998ce9c",
            "74ce382734b27b6b",
            "721899213c294de0",
            "107ae4e9aacf93b1",
            "7a274146dcaaac86",
            "20473c630fd04972",
            "aabf2954a9c22b12",
            "6273e391b80d25e8",
            "4c710143a0708516",
            "872ddbeee3074bc7",
            "f2dafd8348141666",
            "1b0f1bc50bb005dc",
            "32366e76238aae78"
        ],
        "x": 14,
        "y": 19,
        "w": 1832,
        "h": 202
    },
    {
        "id": "6bf1fbf80c50b96b",
        "type": "group",
        "z": "4902f3ca9af6dabb",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "76f7dadc9c6b0991",
            "fcfe7c4d87b69979",
            "09b173b9899a83dd",
            "a2572e50b4e0adf2",
            "396b21ca0e73094b",
            "aa989abfb2a473f6",
            "834109992034f64c",
            "04402a076f80e8ce",
            "a772367c6334dff2",
            "2251c175e52e855b",
            "5f53a910087e4196",
            "247ed5dbdb089565",
            "ac59f55ac75e26f2",
            "c7acfa936a7b9a93",
            "dc7d1dc334bb08ca"
        ],
        "x": 14,
        "y": 399,
        "w": 2112,
        "h": 202
    },
    {
        "id": "fd4bdf33d0253f6a",
        "type": "processcube-html-to-text",
        "z": "4a5484c44fd92283",
        "name": "",
        "x": 350,
        "y": 180,
        "wires": [
            [
                "29d4a47c27dcee43"
            ]
        ]
    },
    {
        "id": "a5e0536ea05cc094",
        "type": "inject",
        "z": "4a5484c44fd92283",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<!DOCTYPE html> <html lang=\"de\">   <head>     <meta charset=\"UTF-8\" />     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />     <title>Beispiel HTML E-Mail</title>     <style>       body {         font-family: Arial, sans-serif;         background-color: #f4f4f4;         margin: 0;         padding: 0;       }       .email-container {         background-color: #ffffff;         margin: 40px auto;         padding: 20px;         width: 100%;         max-width: 600px;         border-radius: 6px;         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);       }       h1 {         color: #333333;       }       p {         color: #555555;         line-height: 1.5;       }       .button {         display: inline-block;         padding: 12px 24px;         margin-top: 20px;         background-color: #007bff;         color: #ffffff;         text-decoration: none;         border-radius: 4px;       }       .footer {         text-align: center;         margin-top: 40px;         font-size: 12px;         color: #999999;       }     </style>   </head>   <body>     <div class=\"email-container\">       <h1>Willkommen bei unserem Newsletter!</h1>       <p",
        "payloadType": "str",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "fd4bdf33d0253f6a"
            ]
        ]
    },
    {
        "id": "29d4a47c27dcee43",
        "type": "debug",
        "z": "4a5484c44fd92283",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 180,
        "wires": []
    },
    {
        "id": "bb3bd11a802bd671",
        "type": "inject",
        "z": "ea83acb4b5051be5",
        "name": "Preset msg, global and flow with a password from the env",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "40951f130640e822",
                "5a6a5f9d1c4fd4fc",
                "931dd8be9290213e"
            ]
        ]
    },
    {
        "id": "40951f130640e822",
        "type": "change",
        "z": "ea83acb4b5051be5",
        "name": "Set user and password to msg.payload",
        "rules": [
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "EMAIL_SEND_USER",
                "tot": "env",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload.password",
                "pt": "msg",
                "to": "EMAIL_SEND_PASSWORD",
                "tot": "env",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 80,
        "wires": [
            [
                "11c54cb89dee1026"
            ]
        ]
    },
    {
        "id": "5a6a5f9d1c4fd4fc",
        "type": "change",
        "z": "ea83acb4b5051be5",
        "name": "Set global user and password",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "global",
                "to": "EMAIL_SEND_USER",
                "tot": "env",
                "dc": true
            },
            {
                "t": "set",
                "p": "password",
                "pt": "global",
                "to": "EMAIL_SEND_PASSWORD",
                "tot": "env",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d902b06948353c07",
        "type": "inject",
        "z": "ea83acb4b5051be5",
        "name": "Test the Email receiver node for flow and global",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "38057e937d452056",
                "4597104b5f3d48be",
                "73b10f832fff4e8a"
            ]
        ]
    },
    {
        "id": "11c54cb89dee1026",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via msg",
        "host": "imap.gmail.com",
        "hostType": "str",
        "port": "993",
        "portType": "num",
        "tls": "true",
        "tlsType": "bool",
        "user": "payload.user",
        "userType": "msg",
        "password": "payload.password",
        "passwordType": "msg",
        "folder": "[\"stoelting/serviceline\"]",
        "folderType": "json",
        "markseen": "false",
        "markseenType": "bool",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "0de3b977ad96591b"
            ],
            []
        ]
    },
    {
        "id": "0de3b977ad96591b",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver msg output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 80,
        "wires": []
    },
    {
        "id": "38057e937d452056",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via flow",
        "host": "imap.gmail.com",
        "hostType": "str",
        "port": "993",
        "portType": "num",
        "tls": "true",
        "tlsType": "bool",
        "user": "user",
        "userType": "flow",
        "password": "password",
        "passwordType": "flow",
        "folder": "[\"stoelting/serviceline\"]",
        "folderType": "json",
        "markseen": "false",
        "markseenType": "bool",
        "x": 660,
        "y": 320,
        "wires": [
            [
                "85122d6c840dd054"
            ],
            []
        ]
    },
    {
        "id": "85122d6c840dd054",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver flow output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "4597104b5f3d48be",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via global",
        "host": "imap.gmail.com",
        "hostType": "str",
        "port": "993",
        "portType": "num",
        "tls": "true",
        "tlsType": "bool",
        "user": "user",
        "userType": "global",
        "password": "password",
        "passwordType": "global",
        "folder": "[\"stoelting/serviceline\"]",
        "folderType": "json",
        "markseen": "false",
        "markseenType": "bool",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "734fff9822cbb1d9"
            ],
            []
        ]
    },
    {
        "id": "734fff9822cbb1d9",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver flow output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 380,
        "wires": []
    },
    {
        "id": "73b10f832fff4e8a",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via env",
        "host": "EMAIL_SEND_HOST",
        "hostType": "env",
        "port": "EMAIL_RECEIVE_PORT",
        "portType": "env",
        "tls": "true",
        "tlsType": "bool",
        "user": "EMAIL_SEND_USER",
        "userType": "env",
        "password": "EMAIL_SEND_PASSWORD",
        "passwordType": "env",
        "folder": "[\"stoelting/personal\",\"stoelting/betrieb\"]",
        "folderType": "json",
        "markseen": "imap_markseen",
        "markseenType": "msg",
        "sendstatus": false,
        "x": 640,
        "y": 440,
        "wires": [
            [
                "4572ad36fe686399"
            ],
            []
        ]
    },
    {
        "id": "4572ad36fe686399",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver env output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 440,
        "wires": []
    },
    {
        "id": "931dd8be9290213e",
        "type": "change",
        "z": "ea83acb4b5051be5",
        "name": "Set flow user and password",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "EMAIL_SEND_USER",
                "tot": "env",
                "dc": true
            },
            {
                "t": "set",
                "p": "password",
                "pt": "flow",
                "to": "EMAIL_SEND_PASSWORD",
                "tot": "env",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "eee089cfd5ef3985",
        "type": "inject",
        "z": "ea83acb4b5051be5",
        "name": "Test markseen",
        "props": [
            {
                "p": "imap_markseen",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "73b10f832fff4e8a"
            ]
        ]
    },
    {
        "id": "154bba0ae1e0eb0f",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via env",
        "host": "EMAIL_RECEIVE_HOST",
        "hostType": "env",
        "port": "EMAIL_RECEIVE_PORT",
        "portType": "env",
        "tls": "true",
        "tlsType": "bool",
        "user": "EMAIL_RECEIVE_USER",
        "userType": "env",
        "password": "EMAIL_RECEIVE_PASSWORD",
        "passwordType": "env",
        "folder": "[\"stoelting/personal\",\"stoelting/betrieb\"]",
        "folderType": "json",
        "markseen": "imap_markseen",
        "markseenType": "msg",
        "sendstatus": true,
        "x": 640,
        "y": 540,
        "wires": [
            [
                "3445e02c1a6fae6a"
            ],
            [
                "b4358b9cd14f5ceb"
            ]
        ]
    },
    {
        "id": "3445e02c1a6fae6a",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver env output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 540,
        "wires": []
    },
    {
        "id": "3710aefa684d1144",
        "type": "inject",
        "z": "ea83acb4b5051be5",
        "name": "Test markseen",
        "props": [
            {
                "p": "imap_markseen",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "154bba0ae1e0eb0f"
            ]
        ]
    },
    {
        "id": "b4358b9cd14f5ceb",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "receive email status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 640,
        "wires": []
    },
    {
        "id": "7be89384c1b95ac1",
        "type": "inject",
        "z": "efcace170d0f887c",
        "name": "Simple test of the email-sender node",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "9f7dfdb7f34fa92b"
            ]
        ]
    },
    {
        "id": "c246681d350609e4",
        "type": "debug",
        "z": "efcace170d0f887c",
        "name": "Test email sent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 120,
        "wires": []
    },
    {
        "id": "9f7dfdb7f34fa92b",
        "type": "email-sender",
        "z": "efcace170d0f887c",
        "name": "",
        "sender": "Diana",
        "senderType": "str",
        "address": "EMAIL_SEND_USER",
        "addressType": "env",
        "to": "diana.stefan@5minds.de",
        "toType": "str",
        "cc": "",
        "ccType": "str",
        "bcc": "",
        "bccType": "str",
        "subject": "Test",
        "subjectType": "str",
        "htmlContent": "test",
        "htmlContentType": "str",
        "attachments": "",
        "attachmentsType": "msg",
        "host": "smtp.gmail.com",
        "hostType": "str",
        "port": "587",
        "portType": "num",
        "user": "EMAIL_SEND_USER",
        "userType": "env",
        "password": "EMAIL_SEND_PASSWORD",
        "passwordType": "env",
        "secure": "false",
        "secureType": "bool",
        "rejectUnauthorized": "true",
        "rejectUnauthorizedType": "bool",
        "x": 810,
        "y": 120,
        "wires": [
            [
                "c246681d350609e4"
            ]
        ]
    },
    {
        "id": "3118cbba246ded32",
        "type": "inject",
        "z": "efcace170d0f887c",
        "name": "Extended test of the email-sender node",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "processInstanceId",
                "v": "123test",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"antwort\":\"Dies ist eine Beispielantwort\",\"status\":\"Done\",\"auftraggeber\":\"Test Auftraggeber\",\"betreff\":\"Erweiterter Test\"}",
        "payloadType": "json",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "656565ebd3cce9f9"
            ]
        ]
    },
    {
        "id": "ce437747f85cb8ee",
        "type": "debug",
        "z": "efcace170d0f887c",
        "name": "Extended test email sent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 200,
        "wires": []
    },
    {
        "id": "88331a67651650d8",
        "type": "email-sender",
        "z": "efcace170d0f887c",
        "name": "",
        "sender": "Diana",
        "senderType": "str",
        "address": "EMAIL_SEND_USER",
        "addressType": "env",
        "to": "diana.stefan@5minds.de",
        "toType": "str",
        "cc": "",
        "ccType": "str",
        "bcc": "",
        "bccType": "str",
        "replyTo": "reply@example.nr",
        "replyToType": "str",
        "subject": "Test",
        "subjectType": "str",
        "htmlContent": "payload",
        "htmlContentType": "msg",
        "attachments": "",
        "attachmentsType": "msg",
        "host": "smtp.gmail.com",
        "hostType": "str",
        "port": "587",
        "portType": "num",
        "user": "EMAIL_SEND_USER",
        "userType": "env",
        "password": "EMAIL_SEND_PASSWORD",
        "passwordType": "env",
        "secure": "false",
        "secureType": "bool",
        "rejectUnauthorized": "true",
        "rejectUnauthorizedType": "bool",
        "x": 810,
        "y": 200,
        "wires": [
            [
                "ce437747f85cb8ee"
            ]
        ]
    },
    {
        "id": "656565ebd3cce9f9",
        "type": "template",
        "z": "efcace170d0f887c",
        "name": "HTML content template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\\\"de\\\">\n    <head>\n        <meta charset=\\\"UTF-8\\\">\n        <title>Ticket-Statusänderung</title>\n        </head>\n        <body style=\\\"font-family: Arial, sans-serif;\\\">\n            <h2>Statusaktualisierung für Ihr Ticket</h2>\n            <p>Hallo {{payload.auftraggeber}},</p>\n            <p>der Status Ihres Tickets <strong>{{processInstanceId}}</strong> hat sich geändert.</p>\n            <p><strong>Neuer Status:</strong> {{payload.status}}</p>\n            <p><strong>Betreff:</strong> {{payload.betreff}}</p>\n            \n            {{#payload.antwort}}\n            <p><strong>Antwort vom Kundenservice:</strong></p>\n            <p style=\\\"background-color: #f4f4f4; padding: 10px; border-left: 4px solid #007ACC;\\\">\n                {{payload.antwort}}\n            </p>\n                {{/payload.antwort}}\n                \n            <hr>\n            <p style=\\\"font-size: 0.9em;\\\">\n                Dies ist eine automatisch generierte Nachricht. Bitte antworten Sie nicht auf diese E-Mail.\n            </p>\n            <p>Mit freundlichen Grüßen,<br>\n            Ihr Support-Team</p>\n        </body>\n</html>",
        "output": "str",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "88331a67651650d8"
            ]
        ]
    },
    {
        "id": "f12845e201b07c7b",
        "type": "inject",
        "z": "efcace170d0f887c",
        "name": "Extended test with attachments",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "processInstanceId",
                "v": "123test",
                "vt": "str"
            },
            {
                "p": "attachment.filename",
                "v": "test.png",
                "vt": "str"
            },
            {
                "p": "attachment.content",
                "v": "1435645213",
                "vt": "str"
            },
            {
                "p": "attachment.contentType",
                "v": "application/png",
                "vt": "str"
            },
            {
                "p": "attachments",
                "v": "[msg.attachment]",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"antwort\":\"Dies ist eine Beispielantwort\",\"status\":\"Done\",\"auftraggeber\":\"Test Auftraggeber\",\"betreff\":\"Erweiterter Test\"}",
        "payloadType": "json",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "3a0588b5257e7841"
            ]
        ]
    },
    {
        "id": "6cadf2b77cac0e0b",
        "type": "debug",
        "z": "efcace170d0f887c",
        "name": "Extended test email sent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 280,
        "wires": []
    },
    {
        "id": "c7e14035c3e1b2e0",
        "type": "email-sender",
        "z": "efcace170d0f887c",
        "name": "",
        "sender": "Diana",
        "senderType": "str",
        "address": "EMAIL_SEND_USER",
        "addressType": "env",
        "to": "diana.stefan@5minds.de",
        "toType": "str",
        "cc": "",
        "ccType": "str",
        "bcc": "",
        "bccType": "str",
        "replyTo": "reply@example.nr",
        "replyToType": "str",
        "subject": "Test",
        "subjectType": "str",
        "htmlContent": "payload",
        "htmlContentType": "msg",
        "attachments": "attachments",
        "attachmentsType": "msg",
        "host": "smtp.gmail.com",
        "hostType": "str",
        "port": "587",
        "portType": "num",
        "user": "EMAIL_SEND_USER",
        "userType": "env",
        "password": "EMAIL_SEND_PASSWORD",
        "passwordType": "env",
        "secure": "false",
        "secureType": "bool",
        "rejectUnauthorized": "true",
        "rejectUnauthorizedType": "bool",
        "x": 810,
        "y": 280,
        "wires": [
            [
                "6cadf2b77cac0e0b"
            ]
        ]
    },
    {
        "id": "3a0588b5257e7841",
        "type": "template",
        "z": "efcace170d0f887c",
        "name": "HTML content template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\\\"de\\\">\n    <head>\n        <meta charset=\\\"UTF-8\\\">\n        <title>Ticket-Statusänderung</title>\n        </head>\n        <body style=\\\"font-family: Arial, sans-serif;\\\">\n            <h2>Statusaktualisierung für Ihr Ticket</h2>\n            <p>Hallo {{payload.auftraggeber}},</p>\n            <p>der Status Ihres Tickets <strong>{{processInstanceId}}</strong> hat sich geändert.</p>\n            <p><strong>Neuer Status:</strong> {{payload.status}}</p>\n            <p><strong>Betreff:</strong> {{payload.betreff}}</p>\n            \n            {{#payload.antwort}}\n            <p><strong>Antwort vom Kundenservice:</strong></p>\n            <p style=\\\"background-color: #f4f4f4; padding: 10px; border-left: 4px solid #007ACC;\\\">\n                {{payload.antwort}}\n            </p>\n                {{/payload.antwort}}\n                \n            <hr>\n            <p style=\\\"font-size: 0.9em;\\\">\n                Dies ist eine automatisch generierte Nachricht. Bitte antworten Sie nicht auf diese E-Mail.\n            </p>\n            <p>Mit freundlichen Grüßen,<br>\n            Ihr Support-Team</p>\n        </body>\n</html>",
        "output": "str",
        "x": 570,
        "y": 280,
        "wires": [
            [
                "c7e14035c3e1b2e0"
            ]
        ]
    },
    {
        "id": "8f531e985998ce9c",
        "type": "inject",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "action",
                "v": "store",
                "vt": "str"
            },
            {
                "p": "file",
                "v": "{\"filename\": \"test.pdf\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[68,105,101,115,32,105,115,116,32,109,101,105,110,32,66,117,102,102,101,114]",
        "payloadType": "bin",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "74ce382734b27b6b",
                "20473c630fd04972"
            ]
        ]
    },
    {
        "id": "74ce382734b27b6b",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Output buffer",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 180,
        "wires": []
    },
    {
        "id": "721899213c294de0",
        "type": "comment",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Speichern in Datenbank aus Buffer und Laden als Buffer mit Löschen im Anschluss",
        "info": "",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "107ae4e9aacf93b1",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Output Speichern",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 180,
        "wires": []
    },
    {
        "id": "7a274146dcaaac86",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Output Laden",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 180,
        "wires": []
    },
    {
        "id": "20473c630fd04972",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Datei in Datenbank speichern",
        "provider": "pg",
        "baseDir": "",
        "usernameType": "env",
        "username": "PGUSER",
        "passwordType": "env",
        "password": "PGPASSWORD",
        "hostType": "env",
        "host": "PGHOST",
        "portType": "env",
        "port": "PGPORT",
        "databaseType": "env",
        "database": "PGDATABASE",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "store",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "107ae4e9aacf93b1",
                "4c710143a0708516"
            ]
        ]
    },
    {
        "id": "aabf2954a9c22b12",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Datei aus Datenbank als Buffer laden",
        "provider": "pg",
        "baseDir": "",
        "usernameType": "env",
        "username": "PGUSER",
        "passwordType": "env",
        "password": "PGPASSWORD",
        "hostType": "env",
        "host": "PGHOST",
        "portType": "env",
        "port": "PGPORT",
        "databaseType": "env",
        "database": "PGDATABASE",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "get",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "7a274146dcaaac86",
                "f2dafd8348141666"
            ]
        ]
    },
    {
        "id": "6273e391b80d25e8",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Datei löschen",
        "provider": "pg",
        "baseDir": "",
        "usernameType": "env",
        "username": "PGUSER",
        "passwordType": "env",
        "password": "PGPASSWORD",
        "hostType": "env",
        "host": "PGHOST",
        "portType": "env",
        "port": "PGPORT",
        "databaseType": "env",
        "database": "PGDATABASE",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "delete",
        "x": 1720,
        "y": 120,
        "wires": [
            [
                "32366e76238aae78"
            ]
        ]
    },
    {
        "id": "4c710143a0708516",
        "type": "function",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Vorbereitung Laden",
        "func": "const newMsg = {\n    action: \"get\",\n    file: {\n        id: msg.file.id,\n    }\n};\n\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 120,
        "wires": [
            [
                "aabf2954a9c22b12",
                "872ddbeee3074bc7"
            ]
        ]
    },
    {
        "id": "872ddbeee3074bc7",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Output Vorbereitung Laden",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 180,
        "wires": []
    },
    {
        "id": "f2dafd8348141666",
        "type": "function",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Vorbereitung Löschen",
        "func": "const newMsg = {\n    action: \"delete\",\n    file: {\n        id: msg.file.id,\n    }\n};\n\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 120,
        "wires": [
            [
                "6273e391b80d25e8",
                "1b0f1bc50bb005dc"
            ]
        ]
    },
    {
        "id": "1b0f1bc50bb005dc",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Output Bereinigen vor Löschen",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 180,
        "wires": []
    },
    {
        "id": "32366e76238aae78",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "26b226e0c33daadc",
        "name": "Output Löschen",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 180,
        "wires": []
    },
    {
        "id": "76f7dadc9c6b0991",
        "type": "inject",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "action",
                "v": "store",
                "vt": "str"
            },
            {
                "p": "file",
                "v": "{\"filename\": \"test.pdf\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[68,105,101,115,32,105,115,116,32,109,101,105,110,32,66,117,102,102,101,114]",
        "payloadType": "bin",
        "x": 110,
        "y": 500,
        "wires": [
            [
                "fcfe7c4d87b69979",
                "aa989abfb2a473f6"
            ]
        ]
    },
    {
        "id": "fcfe7c4d87b69979",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Output buffer",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 560,
        "wires": []
    },
    {
        "id": "09b173b9899a83dd",
        "type": "comment",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Speichern in Datenbank aus Buffer und Laden als Stream mit Löschen im Anschluss",
        "info": "",
        "x": 330,
        "y": 440,
        "wires": []
    },
    {
        "id": "a2572e50b4e0adf2",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Output Speichern",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 560,
        "wires": []
    },
    {
        "id": "396b21ca0e73094b",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Output Laden",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 560,
        "wires": []
    },
    {
        "id": "aa989abfb2a473f6",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Datei in Datenbank speichern",
        "provider": "pg",
        "baseDir": "",
        "usernameType": "env",
        "username": "PGUSER",
        "passwordType": "env",
        "password": "PGPASSWORD",
        "hostType": "env",
        "host": "PGHOST",
        "portType": "env",
        "port": "PGPORT",
        "databaseType": "env",
        "database": "PGDATABASE",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "store",
        "x": 430,
        "y": 500,
        "wires": [
            [
                "a2572e50b4e0adf2",
                "a772367c6334dff2"
            ]
        ]
    },
    {
        "id": "834109992034f64c",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Datei aus Datenbank als Stream laden",
        "provider": "pg",
        "baseDir": "",
        "usernameType": "env",
        "username": "PGUSER",
        "passwordType": "env",
        "password": "PGPASSWORD",
        "hostType": "env",
        "host": "PGHOST",
        "portType": "env",
        "port": "PGPORT",
        "databaseType": "env",
        "database": "PGDATABASE",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "stream",
        "defaultAction": "get",
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "c7acfa936a7b9a93"
            ]
        ]
    },
    {
        "id": "04402a076f80e8ce",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Datei löschen",
        "provider": "pg",
        "baseDir": "",
        "usernameType": "env",
        "username": "PGUSER",
        "passwordType": "env",
        "password": "PGPASSWORD",
        "hostType": "env",
        "host": "PGHOST",
        "portType": "env",
        "port": "PGPORT",
        "databaseType": "env",
        "database": "PGDATABASE",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "delete",
        "x": 1980,
        "y": 500,
        "wires": [
            [
                "ac59f55ac75e26f2"
            ]
        ]
    },
    {
        "id": "a772367c6334dff2",
        "type": "function",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Vorbereitung Laden",
        "func": "const newMsg = {\n    action: \"get\",\n    file: {\n        id: msg.file.id,\n    }\n};\n\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 500,
        "wires": [
            [
                "834109992034f64c",
                "2251c175e52e855b"
            ]
        ]
    },
    {
        "id": "2251c175e52e855b",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Output Vorbereitung Laden",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 560,
        "wires": []
    },
    {
        "id": "5f53a910087e4196",
        "type": "function",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Vorbereitung Löschen",
        "func": "const newMsg = {\n    action: \"delete\",\n    file: {\n        id: msg.file.id,\n    }\n};\n\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 500,
        "wires": [
            [
                "04402a076f80e8ce",
                "247ed5dbdb089565"
            ]
        ]
    },
    {
        "id": "247ed5dbdb089565",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Output Bereinigen vor Löschen",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 560,
        "wires": []
    },
    {
        "id": "ac59f55ac75e26f2",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Output Löschen",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2000,
        "y": 560,
        "wires": []
    },
    {
        "id": "c7acfa936a7b9a93",
        "type": "function",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Lese Stream in Buffer",
        "func": "const chunks = [];\nconst stream = msg.payload;\nstream.on('data', (c) => chunks.push(c));\nawait new Promise((res, rej) => stream.on('end', res).on('error', rej));\n\nmsg.buffer = Buffer.concat(chunks);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 500,
        "wires": [
            [
                "5f53a910087e4196",
                "dc7d1dc334bb08ca"
            ]
        ]
    },
    {
        "id": "dc7d1dc334bb08ca",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "6bf1fbf80c50b96b",
        "name": "Gibt Buffer aus",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 560,
        "wires": []
    }
]