[
    {
        "id": "4a5484c44fd92283",
        "type": "tab",
        "label": "Html to Text",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ea83acb4b5051be5",
        "type": "tab",
        "label": "Email receiver",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "efcace170d0f887c",
        "type": "tab",
        "label": "Email sender",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4902f3ca9af6dabb",
        "type": "tab",
        "label": "File storage",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cae119e5cf0605c7",
        "type": "group",
        "z": "4902f3ca9af6dabb",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bc23935965b25f46",
            "7185a89803f145ea",
            "8768fe6d1967e757",
            "44bead702a355706",
            "2f0322a4b5f18041"
        ],
        "x": 134,
        "y": 99,
        "w": 692,
        "h": 222
    },
    {
        "id": "4179b8b12be402c7",
        "type": "group",
        "z": "4902f3ca9af6dabb",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "27e0781f4dcbe076",
            "94ca2fd19470bb71",
            "e760108b18544b27",
            "b9c44af7fa40c23a",
            "53dbb78d927f4a2a"
        ],
        "x": 134,
        "y": 339,
        "w": 652,
        "h": 202
    },
    {
        "id": "201468a254684a17",
        "type": "group",
        "z": "4902f3ca9af6dabb",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9ae114fe09db4f2f",
            "651ed72d4ade7b14",
            "1caf00dec4f35f1f",
            "ab7a6a668c43b21d",
            "6fc078c8d3575ec8",
            "acc2ae8fdc0b8e3b"
        ],
        "x": 134,
        "y": 559,
        "w": 812,
        "h": 202
    },
    {
        "id": "dbcc6b34b4fe44fe",
        "type": "group",
        "z": "4902f3ca9af6dabb",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "670f8b0df641a9c1",
            "aeeb8ec56e9bff43",
            "a558a5a749da2dbf",
            "6229039e302fab74",
            "1e720aabafa99ea0",
            "2028ee875f21d65c",
            "1f2dd8bbfbc65655",
            "73353271929fac83"
        ],
        "x": 134,
        "y": 799,
        "w": 1172,
        "h": 202
    },
    {
        "id": "fd4bdf33d0253f6a",
        "type": "processcube-html-to-text",
        "z": "4a5484c44fd92283",
        "name": "",
        "x": 350,
        "y": 180,
        "wires": [
            [
                "29d4a47c27dcee43"
            ]
        ]
    },
    {
        "id": "a5e0536ea05cc094",
        "type": "inject",
        "z": "4a5484c44fd92283",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<!DOCTYPE html> <html lang=\"de\">   <head>     <meta charset=\"UTF-8\" />     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />     <title>Beispiel HTML E-Mail</title>     <style>       body {         font-family: Arial, sans-serif;         background-color: #f4f4f4;         margin: 0;         padding: 0;       }       .email-container {         background-color: #ffffff;         margin: 40px auto;         padding: 20px;         width: 100%;         max-width: 600px;         border-radius: 6px;         box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);       }       h1 {         color: #333333;       }       p {         color: #555555;         line-height: 1.5;       }       .button {         display: inline-block;         padding: 12px 24px;         margin-top: 20px;         background-color: #007bff;         color: #ffffff;         text-decoration: none;         border-radius: 4px;       }       .footer {         text-align: center;         margin-top: 40px;         font-size: 12px;         color: #999999;       }     </style>   </head>   <body>     <div class=\"email-container\">       <h1>Willkommen bei unserem Newsletter!</h1>       <p",
        "payloadType": "str",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "fd4bdf33d0253f6a"
            ]
        ]
    },
    {
        "id": "29d4a47c27dcee43",
        "type": "debug",
        "z": "4a5484c44fd92283",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 180,
        "wires": []
    },
    {
        "id": "bb3bd11a802bd671",
        "type": "inject",
        "z": "ea83acb4b5051be5",
        "name": "Preset msg, global and flow with a password from the env",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "40951f130640e822",
                "5a6a5f9d1c4fd4fc",
                "931dd8be9290213e"
            ]
        ]
    },
    {
        "id": "40951f130640e822",
        "type": "change",
        "z": "ea83acb4b5051be5",
        "name": "Set user and password to msg.payload",
        "rules": [
            {
                "t": "set",
                "p": "payload.user",
                "pt": "msg",
                "to": "EMAIL_SEND_USER",
                "tot": "env",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload.password",
                "pt": "msg",
                "to": "EMAIL_SEND_PASSWORD",
                "tot": "env",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 80,
        "wires": [
            [
                "11c54cb89dee1026"
            ]
        ]
    },
    {
        "id": "5a6a5f9d1c4fd4fc",
        "type": "change",
        "z": "ea83acb4b5051be5",
        "name": "Set global user and password",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "global",
                "to": "EMAIL_SEND_USER",
                "tot": "env",
                "dc": true
            },
            {
                "t": "set",
                "p": "password",
                "pt": "global",
                "to": "EMAIL_SEND_PASSWORD",
                "tot": "env",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d902b06948353c07",
        "type": "inject",
        "z": "ea83acb4b5051be5",
        "name": "Test the Email receiver node for flow and global",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "38057e937d452056",
                "4597104b5f3d48be",
                "73b10f832fff4e8a"
            ]
        ]
    },
    {
        "id": "11c54cb89dee1026",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via msg",
        "host": "imap.gmail.com",
        "hostType": "str",
        "port": "993",
        "portType": "num",
        "tls": "true",
        "tlsType": "bool",
        "user": "payload.user",
        "userType": "msg",
        "password": "payload.password",
        "passwordType": "msg",
        "folder": "[\"stoelting/serviceline\"]",
        "folderType": "json",
        "markseen": "false",
        "markseenType": "bool",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "0de3b977ad96591b"
            ]
        ]
    },
    {
        "id": "0de3b977ad96591b",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver msg output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 80,
        "wires": []
    },
    {
        "id": "38057e937d452056",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via flow",
        "host": "imap.gmail.com",
        "hostType": "str",
        "port": "993",
        "portType": "num",
        "tls": "true",
        "tlsType": "bool",
        "user": "user",
        "userType": "flow",
        "password": "password",
        "passwordType": "flow",
        "folder": "[\"stoelting/serviceline\"]",
        "folderType": "json",
        "markseen": "false",
        "markseenType": "bool",
        "x": 660,
        "y": 320,
        "wires": [
            [
                "85122d6c840dd054"
            ]
        ]
    },
    {
        "id": "85122d6c840dd054",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver flow output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "4597104b5f3d48be",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via global",
        "host": "imap.gmail.com",
        "hostType": "str",
        "port": "993",
        "portType": "num",
        "tls": "true",
        "tlsType": "bool",
        "user": "user",
        "userType": "global",
        "password": "password",
        "passwordType": "global",
        "folder": "[\"stoelting/serviceline\"]",
        "folderType": "json",
        "markseen": "false",
        "markseenType": "bool",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "734fff9822cbb1d9"
            ]
        ]
    },
    {
        "id": "734fff9822cbb1d9",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver flow output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 380,
        "wires": []
    },
    {
        "id": "73b10f832fff4e8a",
        "type": "email-receiver",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver via env",
        "host": "EMAIL_SEND_HOST",
        "hostType": "env",
        "port": "EMAIL_SEND_PORT",
        "portType": "env",
        "tls": "true",
        "tlsType": "bool",
        "user": "EMAIL_SEND_USER",
        "userType": "env",
        "password": "EMAIL_SEND_PASSWORD",
        "passwordType": "env",
        "folder": "[\"stoelting/personal\",\"stoelting/betrieb\"]",
        "folderType": "json",
        "markseen": "imap_markseen",
        "markseenType": "msg",
        "x": 640,
        "y": 440,
        "wires": [
            [
                "4572ad36fe686399"
            ]
        ]
    },
    {
        "id": "4572ad36fe686399",
        "type": "debug",
        "z": "ea83acb4b5051be5",
        "name": "Email receiver env output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 440,
        "wires": []
    },
    {
        "id": "931dd8be9290213e",
        "type": "change",
        "z": "ea83acb4b5051be5",
        "name": "Set flow user and password",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "EMAIL_SEND_USER",
                "tot": "env",
                "dc": true
            },
            {
                "t": "set",
                "p": "password",
                "pt": "flow",
                "to": "EMAIL_SEND_PASSWORD",
                "tot": "env",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "eee089cfd5ef3985",
        "type": "inject",
        "z": "ea83acb4b5051be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "imap_markseen",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 480,
        "wires": [
            [
                "73b10f832fff4e8a"
            ]
        ]
    },
    {
        "id": "7be89384c1b95ac1",
        "type": "inject",
        "z": "efcace170d0f887c",
        "name": "Simple test of the email-sender node",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "9f7dfdb7f34fa92b"
            ]
        ]
    },
    {
        "id": "c246681d350609e4",
        "type": "debug",
        "z": "efcace170d0f887c",
        "name": "Test email sent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 120,
        "wires": []
    },
    {
        "id": "9f7dfdb7f34fa92b",
        "type": "email-sender",
        "z": "efcace170d0f887c",
        "name": "",
        "sender": "Diana",
        "senderType": "str",
        "address": "EMAIL_SEND_USER",
        "addressType": "env",
        "to": "diana.stefan@5minds.de",
        "toType": "str",
        "cc": "",
        "ccType": "str",
        "bcc": "",
        "bccType": "str",
        "subject": "Test",
        "subjectType": "str",
        "htmlContent": "test",
        "htmlContentType": "str",
        "attachments": "",
        "attachmentsType": "msg",
        "host": "smtp.gmail.com",
        "hostType": "str",
        "port": "587",
        "portType": "num",
        "user": "EMAIL_SEND_USER",
        "userType": "env",
        "password": "EMAIL_SEND_PASSWORD",
        "passwordType": "env",
        "secure": "false",
        "secureType": "bool",
        "rejectUnauthorized": "true",
        "rejectUnauthorizedType": "bool",
        "x": 810,
        "y": 120,
        "wires": [
            [
                "c246681d350609e4"
            ]
        ]
    },
    {
        "id": "3118cbba246ded32",
        "type": "inject",
        "z": "efcace170d0f887c",
        "name": "Extended test of the email-sender node",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "processInstanceId",
                "v": "123test",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"antwort\":\"Dies ist eine Beispielantwort\",\"status\":\"Done\",\"auftraggeber\":\"Test Auftraggeber\",\"betreff\":\"Erweiterter Test\"}",
        "payloadType": "json",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "656565ebd3cce9f9"
            ]
        ]
    },
    {
        "id": "ce437747f85cb8ee",
        "type": "debug",
        "z": "efcace170d0f887c",
        "name": "Extended test email sent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 200,
        "wires": []
    },
    {
        "id": "88331a67651650d8",
        "type": "email-sender",
        "z": "efcace170d0f887c",
        "name": "",
        "sender": "Diana",
        "senderType": "str",
        "address": "EMAIL_SEND_USER",
        "addressType": "env",
        "to": "diana.stefan@5minds.de",
        "toType": "str",
        "cc": "",
        "ccType": "str",
        "bcc": "",
        "bccType": "str",
        "replyTo": "reply@example.nr",
        "replyToType": "str",
        "subject": "Test",
        "subjectType": "str",
        "htmlContent": "payload",
        "htmlContentType": "msg",
        "attachments": "",
        "attachmentsType": "msg",
        "host": "smtp.gmail.com",
        "hostType": "str",
        "port": "587",
        "portType": "num",
        "user": "EMAIL_SEND_USER",
        "userType": "env",
        "password": "EMAIL_SEND_PASSWORD",
        "passwordType": "env",
        "secure": "false",
        "secureType": "bool",
        "rejectUnauthorized": "true",
        "rejectUnauthorizedType": "bool",
        "x": 810,
        "y": 200,
        "wires": [
            [
                "ce437747f85cb8ee"
            ]
        ]
    },
    {
        "id": "656565ebd3cce9f9",
        "type": "template",
        "z": "efcace170d0f887c",
        "name": "HTML content template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\\\"de\\\">\n    <head>\n        <meta charset=\\\"UTF-8\\\">\n        <title>Ticket-Statusänderung</title>\n        </head>\n        <body style=\\\"font-family: Arial, sans-serif;\\\">\n            <h2>Statusaktualisierung für Ihr Ticket</h2>\n            <p>Hallo {{payload.auftraggeber}},</p>\n            <p>der Status Ihres Tickets <strong>{{processInstanceId}}</strong> hat sich geändert.</p>\n            <p><strong>Neuer Status:</strong> {{payload.status}}</p>\n            <p><strong>Betreff:</strong> {{payload.betreff}}</p>\n            \n            {{#payload.antwort}}\n            <p><strong>Antwort vom Kundenservice:</strong></p>\n            <p style=\\\"background-color: #f4f4f4; padding: 10px; border-left: 4px solid #007ACC;\\\">\n                {{payload.antwort}}\n            </p>\n                {{/payload.antwort}}\n                \n            <hr>\n            <p style=\\\"font-size: 0.9em;\\\">\n                Dies ist eine automatisch generierte Nachricht. Bitte antworten Sie nicht auf diese E-Mail.\n            </p>\n            <p>Mit freundlichen Grüßen,<br>\n            Ihr Support-Team</p>\n        </body>\n</html>",
        "output": "str",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "88331a67651650d8"
            ]
        ]
    },
    {
        "id": "f12845e201b07c7b",
        "type": "inject",
        "z": "efcace170d0f887c",
        "name": "Extended test with attachments",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "processInstanceId",
                "v": "123test",
                "vt": "str"
            },
            {
                "p": "attachment.filename",
                "v": "test.png",
                "vt": "str"
            },
            {
                "p": "attachment.content",
                "v": "1435645213",
                "vt": "str"
            },
            {
                "p": "attachment.contentType",
                "v": "application/png",
                "vt": "str"
            },
            {
                "p": "attachments",
                "v": "[msg.attachment]",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"antwort\":\"Dies ist eine Beispielantwort\",\"status\":\"Done\",\"auftraggeber\":\"Test Auftraggeber\",\"betreff\":\"Erweiterter Test\"}",
        "payloadType": "json",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "3a0588b5257e7841"
            ]
        ]
    },
    {
        "id": "6cadf2b77cac0e0b",
        "type": "debug",
        "z": "efcace170d0f887c",
        "name": "Extended test email sent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 280,
        "wires": []
    },
    {
        "id": "c7e14035c3e1b2e0",
        "type": "email-sender",
        "z": "efcace170d0f887c",
        "name": "",
        "sender": "Diana",
        "senderType": "str",
        "address": "EMAIL_SEND_USER",
        "addressType": "env",
        "to": "diana.stefan@5minds.de",
        "toType": "str",
        "cc": "",
        "ccType": "str",
        "bcc": "",
        "bccType": "str",
        "replyTo": "reply@example.nr",
        "replyToType": "str",
        "subject": "Test",
        "subjectType": "str",
        "htmlContent": "payload",
        "htmlContentType": "msg",
        "attachments": "attachments",
        "attachmentsType": "msg",
        "host": "smtp.gmail.com",
        "hostType": "str",
        "port": "587",
        "portType": "num",
        "user": "EMAIL_SEND_USER",
        "userType": "env",
        "password": "EMAIL_SEND_PASSWORD",
        "passwordType": "env",
        "secure": "false",
        "secureType": "bool",
        "rejectUnauthorized": "true",
        "rejectUnauthorizedType": "bool",
        "x": 810,
        "y": 280,
        "wires": [
            [
                "6cadf2b77cac0e0b"
            ]
        ]
    },
    {
        "id": "3a0588b5257e7841",
        "type": "template",
        "z": "efcace170d0f887c",
        "name": "HTML content template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\\\"de\\\">\n    <head>\n        <meta charset=\\\"UTF-8\\\">\n        <title>Ticket-Statusänderung</title>\n        </head>\n        <body style=\\\"font-family: Arial, sans-serif;\\\">\n            <h2>Statusaktualisierung für Ihr Ticket</h2>\n            <p>Hallo {{payload.auftraggeber}},</p>\n            <p>der Status Ihres Tickets <strong>{{processInstanceId}}</strong> hat sich geändert.</p>\n            <p><strong>Neuer Status:</strong> {{payload.status}}</p>\n            <p><strong>Betreff:</strong> {{payload.betreff}}</p>\n            \n            {{#payload.antwort}}\n            <p><strong>Antwort vom Kundenservice:</strong></p>\n            <p style=\\\"background-color: #f4f4f4; padding: 10px; border-left: 4px solid #007ACC;\\\">\n                {{payload.antwort}}\n            </p>\n                {{/payload.antwort}}\n                \n            <hr>\n            <p style=\\\"font-size: 0.9em;\\\">\n                Dies ist eine automatisch generierte Nachricht. Bitte antworten Sie nicht auf diese E-Mail.\n            </p>\n            <p>Mit freundlichen Grüßen,<br>\n            Ihr Support-Team</p>\n        </body>\n</html>",
        "output": "str",
        "x": 570,
        "y": 280,
        "wires": [
            [
                "c7e14035c3e1b2e0"
            ]
        ]
    },
    {
        "id": "bc23935965b25f46",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "cae119e5cf0605c7",
        "name": "",
        "provider": "pg",
        "baseDir": "/data",
        "pgConnectionString": "postgres://postgres:postgres@localhost:5432/postgres",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "store",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "2f0322a4b5f18041"
            ]
        ]
    },
    {
        "id": "7185a89803f145ea",
        "type": "inject",
        "z": "4902f3ca9af6dabb",
        "g": "cae119e5cf0605c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "action",
                "v": "store",
                "vt": "str"
            },
            {
                "p": "file",
                "v": "{\"filename\": \"test.pdf\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[68,105,101,115,32,105,115,116,32,109,101,105,110,32,66,117,102,102,101,114]",
        "payloadType": "bin",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "bc23935965b25f46",
                "8768fe6d1967e757"
            ]
        ]
    },
    {
        "id": "8768fe6d1967e757",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "cae119e5cf0605c7",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 280,
        "wires": []
    },
    {
        "id": "27e0781f4dcbe076",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "4179b8b12be402c7",
        "name": "",
        "provider": "pg",
        "baseDir": "/data",
        "pgConnectionString": "postgres://postgres:postgres@localhost:5432/postgres",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "get",
        "x": 490,
        "y": 420,
        "wires": [
            [
                "53dbb78d927f4a2a"
            ]
        ]
    },
    {
        "id": "94ca2fd19470bb71",
        "type": "inject",
        "z": "4902f3ca9af6dabb",
        "g": "4179b8b12be402c7",
        "name": "",
        "props": [
            {
                "p": "action",
                "v": "get",
                "vt": "str"
            },
            {
                "p": "file.id",
                "v": "7487b07d-c9cb-47fe-936c-a8e812773be7",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "27e0781f4dcbe076",
                "e760108b18544b27"
            ]
        ]
    },
    {
        "id": "e760108b18544b27",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "4179b8b12be402c7",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 500,
        "wires": []
    },
    {
        "id": "44bead702a355706",
        "type": "comment",
        "z": "4902f3ca9af6dabb",
        "g": "cae119e5cf0605c7",
        "name": "Speichern",
        "info": "",
        "x": 220,
        "y": 140,
        "wires": []
    },
    {
        "id": "b9c44af7fa40c23a",
        "type": "comment",
        "z": "4902f3ca9af6dabb",
        "g": "4179b8b12be402c7",
        "name": "Laden und Ausgabe als Buffer",
        "info": "",
        "x": 280,
        "y": 380,
        "wires": []
    },
    {
        "id": "53dbb78d927f4a2a",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "4179b8b12be402c7",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 420,
        "wires": []
    },
    {
        "id": "9ae114fe09db4f2f",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "201468a254684a17",
        "name": "",
        "provider": "pg",
        "baseDir": "/data",
        "pgConnectionString": "postgres://postgres:postgres@localhost:5432/postgres",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "stream",
        "defaultAction": "get",
        "x": 490,
        "y": 640,
        "wires": [
            [
                "acc2ae8fdc0b8e3b"
            ]
        ]
    },
    {
        "id": "651ed72d4ade7b14",
        "type": "inject",
        "z": "4902f3ca9af6dabb",
        "g": "201468a254684a17",
        "name": "",
        "props": [
            {
                "p": "action",
                "v": "get",
                "vt": "str"
            },
            {
                "p": "file.id",
                "v": "7487b07d-c9cb-47fe-936c-a8e812773be7",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 640,
        "wires": [
            [
                "9ae114fe09db4f2f",
                "1caf00dec4f35f1f"
            ]
        ]
    },
    {
        "id": "1caf00dec4f35f1f",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "201468a254684a17",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 720,
        "wires": []
    },
    {
        "id": "ab7a6a668c43b21d",
        "type": "comment",
        "z": "4902f3ca9af6dabb",
        "g": "201468a254684a17",
        "name": "Laden und Ausgabe als Stream",
        "info": "",
        "x": 290,
        "y": 600,
        "wires": []
    },
    {
        "id": "6fc078c8d3575ec8",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "201468a254684a17",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 640,
        "wires": []
    },
    {
        "id": "acc2ae8fdc0b8e3b",
        "type": "function",
        "z": "4902f3ca9af6dabb",
        "g": "201468a254684a17",
        "name": "function 1",
        "func": "const chunks = [];\nconst stream = msg.payload;\nstream.on('data', (c) => chunks.push(c));\nawait new Promise((res, rej) => stream.on('end', res).on('error', rej));\n\nmsg.buffer = Buffer.concat(chunks);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 640,
        "wires": [
            [
                "6fc078c8d3575ec8"
            ]
        ]
    },
    {
        "id": "2f0322a4b5f18041",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "cae119e5cf0605c7",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 200,
        "wires": []
    },
    {
        "id": "670f8b0df641a9c1",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "dbcc6b34b4fe44fe",
        "name": "Datei in Datenbank speichern",
        "provider": "pg",
        "baseDir": "/data",
        "pgConnectionString": "postgres://postgres:postgres@localhost:5432/postgres",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "store",
        "x": 470,
        "y": 900,
        "wires": [
            [
                "1e720aabafa99ea0",
                "2028ee875f21d65c"
            ]
        ]
    },
    {
        "id": "aeeb8ec56e9bff43",
        "type": "inject",
        "z": "4902f3ca9af6dabb",
        "g": "dbcc6b34b4fe44fe",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "action",
                "v": "store",
                "vt": "str"
            },
            {
                "p": "file",
                "v": "{\"filename\": \"test.pdf\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[68,105,101,115,32,105,115,116,32,109,101,105,110,32,66,117,102,102,101,114]",
        "payloadType": "bin",
        "x": 230,
        "y": 900,
        "wires": [
            [
                "670f8b0df641a9c1",
                "a558a5a749da2dbf"
            ]
        ]
    },
    {
        "id": "a558a5a749da2dbf",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "dbcc6b34b4fe44fe",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 960,
        "wires": []
    },
    {
        "id": "6229039e302fab74",
        "type": "comment",
        "z": "4902f3ca9af6dabb",
        "g": "dbcc6b34b4fe44fe",
        "name": "Speichern und Löschen",
        "info": "",
        "x": 260,
        "y": 840,
        "wires": []
    },
    {
        "id": "1e720aabafa99ea0",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "dbcc6b34b4fe44fe",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 960,
        "wires": []
    },
    {
        "id": "2028ee875f21d65c",
        "type": "function",
        "z": "4902f3ca9af6dabb",
        "g": "dbcc6b34b4fe44fe",
        "name": "function 2",
        "func": "\nmsg.action = \"delete\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 900,
        "wires": [
            [
                "1f2dd8bbfbc65655"
            ]
        ]
    },
    {
        "id": "1f2dd8bbfbc65655",
        "type": "file-storage",
        "z": "4902f3ca9af6dabb",
        "g": "dbcc6b34b4fe44fe",
        "name": "Datei aus Datenbank löschen",
        "provider": "pg",
        "baseDir": "/data",
        "pgConnectionString": "postgres://postgres:postgres@localhost:5432/postgres",
        "pgSchema": "public",
        "pgTable": "files",
        "outputAs": "buffer",
        "defaultAction": "delete",
        "x": 960,
        "y": 900,
        "wires": [
            [
                "73353271929fac83"
            ]
        ]
    },
    {
        "id": "73353271929fac83",
        "type": "debug",
        "z": "4902f3ca9af6dabb",
        "g": "dbcc6b34b4fe44fe",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 900,
        "wires": []
    }
]